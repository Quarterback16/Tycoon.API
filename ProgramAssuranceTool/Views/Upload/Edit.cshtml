@using ProgramAssuranceTool.Helpers
@model ProgramAssuranceTool.ViewModels.Sample.UploadEditViewModel

@{
    ViewBag.Title = "Edit Sample Details";
}

<div class="page-header">
    <ol class="breadcrumb">
        <li>@Html.ActionLink("Projects", "Index", "Project")</li>
        <li>@Html.ActionLink("Project Samples", "Details", "Project", new { id = Model.ProjectId, tabNo = CommonConstants.ProjectTab_Samples }, "")</li>
        <li>@Html.ActionLink( "Review List", "Details", "Upload", new { id = @Model.UploadId }, "" )</li>
        <li class="active">Edit Sample Details</li>
    </ol>          
    <h1>@Model.ProjectName</h1>
</div>

@Html.Hidden("UnloadMessage", "Data has not been saved. If you proceed you will lose current changes.")

@using (Html.BeginForm("Edit", "Upload", FormMethod.Post, new { id = "uploadEditForm", name = "uploadEditForm" }))
 {
                
<div class="panel panel-default col-lg-12 row">    
    
    <div class="panel-body">     
        <div class="col-lg-6 col-md-6">

            @Html.ValidationMessageSummary()	
            <p>
                @Html.Partial("RequiredFieldMessage")
            </p>
                            
            <div class="form-group">
                @Html.LabelForRequired( model => model.SampleName )
                @if (Model.IsAdministrator)
                {
                    @Html.ValidationMessageFor( model => model.SampleName )
                    @Html.EditorFor( model => model.SampleName )
                }
                else
                {
                    @Html.DisplayFor( model => model.SampleName )           
                }
            </div>
            
            @if (Model.ProjectIsContractMonitoringOrContractSiteVisit)
            {
                <div class="form-group">
                    @Html.LabelForRequired( model => model.SampleDueDate )
                    @if (Model.IsAdministrator)
                    {
                        <div class="form-group">                        
                            @Html.ValidationMessageFor( model => model.SampleDueDate )
                            @Html.EditorFor( model => model.SampleDueDate )
                        </div>

                        <fieldset><legend>Sample Type</legend>

                            <div class="form-group indented">
                                @Html.CheckBoxFor( model => model.IsRandom ) &nbsp;&nbsp; Random          
                            </div>

                        </fieldset>
                    }
                    else
                    {
                        @Html.DisplayFor( model => model.SampleDueDate )
                    }
                </div>
            }

            @if (!Model.ProjectIsContractMonitoringOrContractSiteVisit)
            {
                 if (Model.IsAdministrator)
                 {

                     <fieldset><legend>Upload/Sample Type</legend><br/>

                         <div class="form-group indented">
                             @Html.CheckBoxFor( model => model.IsRandom ) &nbsp;&nbsp; Random          
                         </div>

                         <div class="form-group indented">
                             <span>
                                 @Html.CheckBoxFor( model => model.IsNational ) &nbsp;&nbsp; National            
                             </span>   
                         </div>    

                     </fieldset>
                 }
            }

            @Html.HiddenFor( model => model.ProjectName )
            @Html.HiddenFor( model => model.UploadId )
            @Html.HiddenFor( model => model.ProjectId )
            @Html.HiddenFor( model => model.SampleStartDate )
            @Html.HiddenFor( model => model.IsAdministrator )
            @Html.HiddenFor( model => model.IsProjectCoordinator )
            @Html.HiddenFor( model => model.OriginalName )
            @Html.HiddenFor( model => model.ProjectIsContractMonitoringOrContractSiteVisit )
            @Html.HiddenFor( model => model.IsAccepted )
            @Html.HiddenFor( model => model.Reviews )
            @Html.HiddenFor( model => model.CompletedReviews )

        </div>
        <div class="col-lg-6 col-md-6">
            @Html.Raw( ViewData[ "sample-data" ] )                
        </div>
    </div>	
		
    @if (Model.IsAdministrator )
    {
        <div class="panel-footer">
            <div class="row indented">
                <button id="submit-button" type="submit" class="btn btn-lg btn-primary">Submit Changes</button>
                @if (!Model.ProjectIsContractMonitoringOrContractSiteVisit && ( Model.CompletedReviews == Model.Reviews ) && !Model.IsAccepted )
                {
                    <button id="accept-button" type="submit" class="btn btn-lg btn-primary" >Accept</button>
                }
            </div>
            <br/>
        </div>
    }
 
</div>		
}

