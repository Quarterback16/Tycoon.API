@using Employment.Web.Mvc.Infrastructure.Types
@using Employment.Web.Mvc.Infrastructure.Extensions

@model IEnumerable<BulletinViewModel>

@if (ViewData.Model == null)
{
    @ViewData.ModelMetadata.NullDisplayText
    return;
}

@{
    // Get paged metadata
    var pagedMetadata = ViewData["PagedMetadata"] as PageMetadata;

    if (pagedMetadata == null)
    {
        return;
    }

    // Default paging based on paged metadata
    int page = pagedMetadata.PageNumber;
    int pageSize = pagedMetadata.PageSize;

    // Page model if it has more items than the allowed page size
    var models = Model.Count() > pageSize ? Model.AsEnumerable().Skip((page - 1) * pageSize).Take(pageSize) : Model;

    // Loop through each model and output as a row in the table
    foreach (var bulletin in models)
    {
        <li>
            <span>@bulletin.LiveDate.ToShortDateString()</span> @Html.ActionLink(bulletin.Title, "Bulletin", "Default", new { Area = string.Empty, id = bulletin.PageId }, new { title = string.Format("{0} {1}", bulletin.LiveDate.ToShortDateString(), bulletin.Title) })
        </li>
    }

    // Update paged metadata of next page
    pagedMetadata.PageNumber = page + 1; // Next page

    // Include new metadata
    @:<li class="hidden" @HtmlDataType.PagedMetadata="@pagedMetadata.Serialize()" @HtmlDataType.PagedHasMore="@pagedMetadata.HasMorePages()"></li>
}